<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="manage.dao.SalaryMapper">
  <resultMap id="BaseResultMap" type="manage.model.DO.Salary">
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="VARCHAR" />
    <result column="base" property="base" jdbcType="INTEGER" />
    <result column="extra" property="extra" jdbcType="INTEGER" />
    <result column="bonus" property="bonus" jdbcType="INTEGER" />
    <result column="fine" property="fine" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="DATE" />
  </resultMap>
  <sql id="Base_Column_List">
    id, staff_id, base, extra, bonus, fine, total, time
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from salary
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from salary
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByStaffId" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from salary
    where staff_id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from salary
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="manage.model.DO.Salary">
    insert into salary (id, staff_id, base, 
      extra, bonus, fine, 
      total, time)
    values (#{id,jdbcType=VARCHAR}, #{staffId,jdbcType=VARCHAR}, #{base,jdbcType=INTEGER}, 
      #{extra,jdbcType=INTEGER}, #{bonus,jdbcType=INTEGER}, #{fine,jdbcType=INTEGER}, 
      #{total,jdbcType=INTEGER}, #{time,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="manage.model.DO.Salary">
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="base != null">
        base,
      </if>
      <if test="extra != null">
        extra,
      </if>
      <if test="bonus != null">
        bonus,
      </if>
      <if test="fine != null">
        fine,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        #{base,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        #{extra,jdbcType=INTEGER},
      </if>
      <if test="bonus != null">
        #{bonus,jdbcType=INTEGER},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="manage.model.DO.Salary">
    update salary
    <set>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        base = #{base,jdbcType=INTEGER},
      </if>
      <if test="extra != null">
        extra = #{extra,jdbcType=INTEGER},
      </if>
      <if test="bonus != null">
        bonus = #{bonus,jdbcType=INTEGER},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="manage.model.DO.Salary">
    update salary
    set staff_id = #{staffId,jdbcType=VARCHAR},
      base = #{base,jdbcType=INTEGER},
      extra = #{extra,jdbcType=INTEGER},
      bonus = #{bonus,jdbcType=INTEGER},
      fine = #{fine,jdbcType=INTEGER},
      total = #{total,jdbcType=INTEGER},
      time = #{time,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>