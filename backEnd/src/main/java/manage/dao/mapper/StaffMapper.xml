<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manage.dao.StaffMapper" >
  <resultMap id="BaseResultMap" type="manage.model.DO.Staff" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="position_id" property="positionId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="contract_id" property="contractId" jdbcType="VARCHAR" />
    <result column="profile_id" property="profileId" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pid, position_id, status, department_id, contract_id, profile_id, deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from staff
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="manage.model.DO.Staff" >
    insert into staff (id, pid, position_id, 
      status, department_id, contract_id, 
      profile_id, deleted)
    values (#{id,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{positionId,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{contractId,jdbcType=VARCHAR}, 
      #{profileId,jdbcType=VARCHAR}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="manage.model.DO.Staff" >
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="positionId != null" >
        position_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="profileId != null" >
        profile_id,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="profileId != null" >
        #{profileId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="manage.model.DO.Staff" >
    update staff
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=VARCHAR},
      </if>
      <if test="profileId != null" >
        profile_id = #{profileId,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="manage.model.DO.Staff" >
    update staff
    set pid = #{pid,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR},
      contract_id = #{contractId,jdbcType=VARCHAR},
      profile_id = #{profileId,jdbcType=VARCHAR},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>